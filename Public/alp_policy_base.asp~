roles(employee;nutritionist;null;doctor;volunteer).
subjects(joel;null;pat;sean).
xpaths(_food_calories;_dailyvalues;_dailyvalues_carb;null;_food_carb;_).
documents(nutrition;null).
tempints(tuesday;null;wednesday;monday).

role(volunteer,pp,nutrition,_food_carb,read).
role(volunteer,pp,nutrition,_dailyvalues_carb,read).
role(employee,pp,nutrition,_,read).
below(nutritionist,employee).
role(nutritionist,pp,nutrition,_,write).
role(volunteer,pp,nutrition,_food_calories,read).
separate(nutritionist,employee).
grant(sean,nutritionist,monday).
grant(pat,doctor,wednesday).
role(doctor,pp,nutrition,_dailyvalues,write).
role(nutritionist,mm,nutrition,_dailyvalues,write).
grant(pat,nutritionist,wednesday).
before(monday,tuesday).
before(tuesday,wednesday).
grant(ANYONE,nutritionist,ANYTIME) :- grant(ANYONE,volunteer,OTHERTIME), before(OTHERTIME,ANYTIME).
grant(joel,volunteer,tuesday).

%-----------------------------------------------------------------------------------------------------------------------
%CONSTANTS
%-----------------------------------------------------------------------------------------------------------------------

signs(pp; mm).
privs(read; write).

%-----------------------------------------------------------------------------------------------------------------------
%LANGUAGE RULES
%-----------------------------------------------------------------------------------------------------------------------

%RBAC RELATIONSHIPS

%role hierarchy implication
below(A,C) :- below(A,B), below(B,C), roles(A), roles(B), roles(C).
:- below(A, B), not roles(A), not roles(B).
role(X, SIGNY, DOCUMENTY, XPATHY, PRIVILEGEY) :- below(X, Y), roles(X), roles(Y), role(X, SIGNX, DOCUMENTX, XPATHX, PRIVILEGEX), role(Y, SIGNY, DOCUMENTY, XPATHY, PRIVILEGEY), signs(SIGNX), signs(SIGNY), privs(PRIVILEGEX), privs(PRIVILEGEY), documents(DOCUMENTX), documents(DOCUMENTY), xpaths(XPATHX), xpaths(XPATHY).

%conflict resolution rule
exist_neg(SUBJECT, DOCUMENT, XPATH, PRIVILEGE, INTERVAL) :- grant(SUBJECT, ROLENAME, INTERVAL), role(ROLENAME, mm, DOCUMENT, XPATH, PRIVILEGE), privs(PRIVILEGE), tempints(INTERVAL).

%separation of duty relationship
separate(X, Y) :- separate(Y, X), roles(X), roles(Y).

%separation of duty rule
sepduty_fail(SUBJECT) :- grant(SUBJECT, ROLEX, INTERVALA), grant(SUBJECT, ROLEY, INTERVALB), tempints(INTERVALA), tempints(INTERVALB), roles(ROLEX), roles(ROLEY), separate(ROLEX, ROLEY).

%nonexistent role granting
:- grant(SUBJECT, ROLE, INTERVAL), not roles(ROLE).

%-----------------------------------------------------------------------------------------------------------------------

%THE AUTHORISATION RULE

%authorisation of subjects with roles with conflict resolution and separation of duty
auth(SUBJECT, DOCUMENT, XPATH, PRIVILEGE, INTERVAL) :- grant(SUBJECT, ROLE, INTERVAL), subjects(SUBJECT), role(ROLE, SIGN, DOCUMENT, XPATH, PRIVILEGE), privs(PRIVILEGE), signs(SIGN), not exist_neg(SUBJECT, DOCUMENT, XPATH, PRIVILEGE, INTERVAL), not sepduty_fail(SUBJECT).


%-----------------------------------------------------------------------------------------------------------------------

%TEMPORAL INTERVAL RELATIONSHIPS AND IMPLICATIONS

%temporal interval containment rule
grant(SUBJECT, ROLE, INTERVALB) :- grant(SUBJECT, ROLE, INTERVALA), during(INTERVALB, INTERVALA), roles(ROLE), tempints(INTERVALA), tempints(INTERVALB), subjects(SUBJECT).

%implicit relationships (for containment)
during(A, B) :- starts(A, B), tempints(A), tempints(B).
during(A, B) :- finishes(A, B), tempints(A), tempints(B).
before(A, B) :- meets(A, B), tempints(A), tempints(B).

before(A, C) :- before(A, B), before(B, C), tempints(A), tempints(B), tempints(C).
during(A, C) :- during(A, B), during(B, C), tempints(A), tempints(B), tempints(C).
starts(A, C) :- starts(A, B), starts(B, C), tempints(A), tempints(B), tempints(C).
finishes(A, C) :- finishes(A, B), finishes(B, C), tempints(A), tempints(B), tempints(C).
equal(A, C) :- equal(A, B), equal(B, C), tempints(A), tempints(B), tempints(C).

%classically negated rules
-before(A, B) :- during(A, B), tempints(A), tempints(B).
-overlap(A, B) :- during(A, B), tempints(A), tempints(B).
-meets(A, B) :- during(A, B), tempints(A), tempints(B).
-equal(A, B) :- during(A, B), tempints(A), tempints(B).

-during(A, B) :- before(A, B), tempints(A), tempints(B).
-during(A, B) :- overlap(A, B), tempints(A), tempints(B).
-during(A, B) :- meets(A, B), tempints(A), tempints(B).
-during(A, B) :- equal(A, B), tempints(A), tempints(B).

-before(A, B) :- overlap(A, B), tempints(A), tempints(B).
-meets(A, B) :- overlap(A, B), tempints(A), tempints(B).
-equal(A, B) :- overlap(A, B), tempints(A), tempints(B).

-overlap(A, B) :- before(A, B), tempints(A), tempints(B).
-equal(A, B) :- before(A, B), tempints(A), tempints(B).

-equal(A, B) :- meets(A, B), tempints(A), tempints(B).
-overlap(A, B) :- meets(A, B), tempints(A), tempints(B).

-before(A, B) :- equal(A, B), tempints(A), tempints(B).
-overlap(A, B) :- equal(A, B), tempints(A), tempints(B).
-meets(A, B) :- equal(A, B), tempints(A), tempints(B).

:- -during(A, B), during(A, B), tempints(A), tempints(B).
:- -before(A, B), before(A, B), tempints(A), tempints(B).
:- -overlap(A, B), overlap(A, B), tempints(A), tempints(B).
:- -meets(A, B), meets(A, B), tempints(A), tempints(B).
:- -equal(A, B), equal(A, B), tempints(A), tempints(B).

%bounded temporal interval rule
during(D, A) :- starts(B, A), finishes(C, A), before(B, D), before(D, C), tempints(A), tempints(B), tempints(C), tempints(D).

%equality rules
during(C, B) :- equal(A, B), during(C, A), tempints(A), tempints(B), tempints(C).
starts(C, B) :- equal(A, B), starts(C, A), tempints(A), tempints(B), tempints(C).
finishes(C, B) :- equal(A, B), finishes(C, A), tempints(A), tempints(B), tempints(C).
before(C, B) :- equal(A, B), before(C, A), tempints(A), tempints(B), tempints(C).
overlap(C, B) :- equal(A, B), overlap(C, A), tempints(A), tempints(B), tempints(C).
meets(C, B) :- equal(A, B), meets(C, A), tempints(A), tempints(B), tempints(C).


%-----------------------------------------------------------------------------------------------------------------------

